# demo_setup.yml

- hosts: localhost
  gather_facts: False

  tasks:
  - name: create a VPC with dedicated tenancy and a couple of tags
    amazon.aws.ec2_vpc_net:
      name: jay4dm
      cidr_block: 178.78.0.0/16
      region: ap-southeast-1
      tags:
        project: dmtest
      tenancy: default

  - name: Get the vpc info
    amazon.aws.ec2_vpc_net_info:
      filters:
        "tag:Name": jay4dm
      region: ap-southeast-1
    register: vpc_info

  - name: set the vpc_id fact
    set_fact:
      vpc_id: "{{vpc_info.vpcs[0].vpc_id}}"
    when: (vpc_info.vpcs is defined) and (vpc_info.vpcs|length > 0)

  - name: Print the vpc's id
    ansible.builtin.debug:
      msg:  "The vpc id is << {{vpc_id}} >> "
    when: vpc_id is defined

  - amazon.aws.aws_az_info:
      region: ap-southeast-1
    register: zones

  - name: Create the subnet
    amazon.aws.ec2_vpc_subnet:
      state: present
      vpc_id: "{{vpc_id}}"
      cidr: "{{ '178.78.0.0/16' | ansible.netcommon.ipsubnet(24, item.0 + 1) }}"
      region: ap-southeast-1
      az: "{{item.1.zone_name}}"
      tags:
        Name: "jay4dm-0{{item.0}}"
        project: jay4dm
    with_indexed_items: "{{zones.availability_zones}}"
    register: subnets

  - name: Print all the subnets
    ansible.builtin.debug:
      msg:  "The subnets info is << {{item.subnet.cidr_block}} >> "
    with_items: "{{subnets.results}}"

  - name: Create Internet gateway with tags
    community.aws.ec2_vpc_igw:
      vpc_id: "{{vpc_id}}"
      state: present
      tags:
        project: jay4dm
        Name: gw-jay4dm
      region: ap-southeast-1
    register: igw

  - name: Print the gateway
    ansible.builtin.debug:
      msg:  "The gateway info is << {{igw}} >> "
    when: igw is defined

  - name: Create route table for private
    community.aws.ec2_vpc_route_table:
      region: ap-southeast-1
      vpc_id: "{{vpc_id}}"
      tags:
        Name: Private-jay4dm
      subnets: "{{subnets.results | map(attribute='subnet.id') | list}}"

  - name: Create route table for public
    community.aws.ec2_vpc_route_table:
      region: ap-southeast-1
      vpc_id: "{{vpc_id}}"
      tags:
        Name: Public-jay4dm
      subnets: "{{subnets.results | map(attribute='subnet.id') | first}}"
      routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"

  - name: Create the security group for VPC
    amazon.aws.ec2_group:
      name: sg.jay4dm
      description: The security group for jay4em
      vpc_id: "{{vpc_id}}"
      region: ap-southeast-1
      tags:
        Name: "sg-jay4dm"
      rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 118.241.130.235/32
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 178.78.1.0/24
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 178.78.2.0/24
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 178.78.3.0/24
    register: sg

  - name: Print the securoty group
    debug:
      msg: "This is the security group {{sg}}"

  - name: create key pair using key_material obtained using 'file' lookup plugin
    amazon.aws.ec2_key:
      name: jay4dm_keypair
      key_material: "{{ lookup('file', '/home/pi/.ssh/id_rsa.pub') }}"
      region: ap-southeast-1
    register: keypair

  - name: Print the key pair
    debug:
      msg: "This is the security group {{keypair}}"

#  - amazon.aws.ec2:
#      key_name: jay4dm_keypair
#      instance_type: t2.micro
#      image: ami-018c1c51c7a13e363
#      wait: yes
#      vpc_subnet_id: "{{subnets.results | map(attribute='subnet.id') | first}}"
#      assign_public_ip: yes
#      group: sg.jay4dm
#      region: ap-southeast-1
#      count: 1
#      instance_tags:
#        Name: ins.jay4dm

#  - amazon.aws.ec2:
#      key_name: jay4dm_keypair
#      instance_type: t2.micro
#      image: ami-018c1c51c7a13e363
#      wait: yes
#      vpc_subnet_id: "{{item.1}}"
#      group: sg.jay4dm
#      region: ap-southeast-1
#      count: 1
#      instance_tags:
#        Name: "ins.jay4dm.{{item.0}}"
#    with_indexed_items: "{{ subnets.results | map(attribute='subnet.id') | list }}"





#  - name: Set up public subnet route table
#    community.aws.ec2_vpc_route_table:
#      vpc_id: "{{vpc_id}}"
#      region: ap-southeast-1
#      tags:
#        project: jay4dm
##    subnets:
##      - "{{ jumpbox_subnet.subnet.id }}"
##      - "{{ frontend_subnet.subnet.id }}"
##      - "{{ vpn_subnet.subnet_id }}"
#    routes:
#      - dest: 0.0.0.0/0
#        gateway_id: "{{ igw.gateway_id }}"
